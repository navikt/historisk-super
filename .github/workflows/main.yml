name: Bygg og deploy main

on:
  push:
    branches:
      - main

jobs:
  backend:
    name: "Bygg backend"
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
      telemetry:  ${{ steps.docker-build-push.outputs.telemetry }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: frontend/package-lock.json
          registry-url: "https://npm.pkg.github.com"

#      - name: Installere node moduler
#        working-directory: ./frontend
#        run: npm ci
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Bygge frontend
        working-directory: ./frontend
        run: npm run build

      - name: Build artifacts
        run: mvn --batch-mode verify
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Bygg og push docker image til GAR
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: historisk
          docker_context: ./backend

  deploy_dev:
    needs:
      - backend
    name: "Deploy til dev"
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Deploy backend til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/app/backend.yaml
          VARS: .nais/dev.json
          IMAGE: ${{ needs.backend.outputs.image }}
          TELEMETRY: ${{ needs.backend.outputs.telemetry }}
