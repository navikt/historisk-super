/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.nav.oppgave.models


import com.fasterxml.jackson.annotation.JsonFormat
import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param tema Tema for oppgaven
 * @param oppgavetype Kategorisering av oppgaven. Må være tillatt for det aktuelle temaet. Se api for kodeverk
 * @param aktivDato Benyttes for å legge en oppgave \"på vent\". Sette normalt til dagens dato for nye oppgaver. Styrer visning i arbeidsflater, der oppgaver med dato <= dagens dato vises.
 * @param prioritet Hvilken prioritet oppgaven skal ha
 * @param personident ident for person oppgaven knyttes mot, dvs. fnr, dnr, npid eller aktørid, Kan kun knyttes mot én bruker
 * @param orgnr Organisasjonsnummer oppgaven knyttes mot. Kan kun knyttes mot én bruker
 * @param tildeltEnhetsnr Enheten oppgaven tildeles. Dersom enhet ikke er angitt, så vil oppgaven automatisk bli forsøkt fordeling iht. standard arbeidsfordelingsregler (se norg2)
 * @param opprettetAvEnhetsnr Hvilken enhet som har opprettet oppgaven. Skal alltid angis dersom oppgaven registreres av en medarbeider
 * @param journalpostId Id for en journalpostreferanse. Benyttes når oppgaven skal kobles mot journalposter, i.e for journalføringsoppgaver
 * @param behandlesAvApplikasjon Indikerer hvilken applikasjon oppgaven skal behandles i. Hvis angitt vil dette begrense hva man kan endre på av oppgaven i Gosys
 * @param beskrivelse Kort tekstlig beskrivelse av oppgaven. Vennligst overhold følgende retningslinjer 1. Det skal ikke benyttes header (unngå alle varianter av --- dd.mm.yyyy (XXXXXX, <enhetsnr>) --- 2. Skal ikke være nødvendig informasjon for saksbehandlere til å finne riktig oppgave i en liste. Til dette skal tema, oppgavetype, behandlingstema, behandlingstype benyttes 3. Unngå personsensitiv og/eller lokaliserende informasjon, da dette feltet enn så lenge presenteres i en god del arbeidslister i eldre systemer
 * @param behandlingstema Kategorisering av oppgaven. Som hovedregel skal alltid minst en av behandlingstema og/eller behandlingstype være angitt. Må være tillatt for det aktuelle temaet og i kombinasjon med en ev. behandlingstype. Se api for kodeverk
 * @param behandlingstype Kategorisering av oppgaven. Som hovedregel skal alltid minst en av behanlingstema og/eller behandlingstype være angitt. Må være tillatt for det aktuelle temaet og i kombinasjon med et ev. behandlingstema. Se api for kodeverk
 * @param fristFerdigstillelse Oppgavens frist for ferdigstillelse.
 */


data class OpprettOppgaveRequest (

    /* Tema for oppgaven */
    @get:JsonProperty("tema")
    val tema: kotlin.String,

    /* Kategorisering av oppgaven. Må være tillatt for det aktuelle temaet. Se api for kodeverk */
    @get:JsonProperty("oppgavetype")
    val oppgavetype: kotlin.String,

    /* Benyttes for å legge en oppgave \"på vent\". Sette normalt til dagens dato for nye oppgaver. Styrer visning i arbeidsflater, der oppgaver med dato <= dagens dato vises. */
    @get:JsonProperty("aktivDato") @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    val aktivDato: java.time.LocalDate,

    /* Hvilken prioritet oppgaven skal ha */
    @get:JsonProperty("prioritet")
    val prioritet: OpprettOppgaveRequest.Prioritet,

    /* ident for person oppgaven knyttes mot, dvs. fnr, dnr, npid eller aktørid, Kan kun knyttes mot én bruker */
    @get:JsonProperty("personident")
    val personident: kotlin.String? = null,

    /* Organisasjonsnummer oppgaven knyttes mot. Kan kun knyttes mot én bruker */
    @get:JsonProperty("orgnr")
    val orgnr: kotlin.String? = null,

    /* Enheten oppgaven tildeles. Dersom enhet ikke er angitt, så vil oppgaven automatisk bli forsøkt fordeling iht. standard arbeidsfordelingsregler (se norg2) */
    @get:JsonProperty("tildeltEnhetsnr")
    val tildeltEnhetsnr: kotlin.String? = null,

    /* Hvilken enhet som har opprettet oppgaven. Skal alltid angis dersom oppgaven registreres av en medarbeider */
    @get:JsonProperty("opprettetAvEnhetsnr")
    val opprettetAvEnhetsnr: kotlin.String? = null,

    /* Id for en journalpostreferanse. Benyttes når oppgaven skal kobles mot journalposter, i.e for journalføringsoppgaver */
    @get:JsonProperty("journalpostId")
    val journalpostId: kotlin.String? = null,

    /* Indikerer hvilken applikasjon oppgaven skal behandles i. Hvis angitt vil dette begrense hva man kan endre på av oppgaven i Gosys */
    @get:JsonProperty("behandlesAvApplikasjon")
    val behandlesAvApplikasjon: kotlin.String? = null,

    /* Kort tekstlig beskrivelse av oppgaven. Vennligst overhold følgende retningslinjer 1. Det skal ikke benyttes header (unngå alle varianter av --- dd.mm.yyyy (XXXXXX, <enhetsnr>) --- 2. Skal ikke være nødvendig informasjon for saksbehandlere til å finne riktig oppgave i en liste. Til dette skal tema, oppgavetype, behandlingstema, behandlingstype benyttes 3. Unngå personsensitiv og/eller lokaliserende informasjon, da dette feltet enn så lenge presenteres i en god del arbeidslister i eldre systemer */
    @get:JsonProperty("beskrivelse")
    val beskrivelse: kotlin.String? = null,

    /* Kategorisering av oppgaven. Som hovedregel skal alltid minst en av behandlingstema og/eller behandlingstype være angitt. Må være tillatt for det aktuelle temaet og i kombinasjon med en ev. behandlingstype. Se api for kodeverk */
    @get:JsonProperty("behandlingstema")
    val behandlingstema: kotlin.String? = null,

    /* Kategorisering av oppgaven. Som hovedregel skal alltid minst en av behanlingstema og/eller behandlingstype være angitt. Må være tillatt for det aktuelle temaet og i kombinasjon med et ev. behandlingstema. Se api for kodeverk */
    @get:JsonProperty("behandlingstype")
    val behandlingstype: kotlin.String? = null,

    /* Oppgavens frist for ferdigstillelse. */
    @get:JsonProperty("fristFerdigstillelse") @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    val fristFerdigstillelse: java.time.LocalDate? = null

) {

    /**
     * Hvilken prioritet oppgaven skal ha
     *
     * Values: HOY,NORM,LAV
     */
    enum class Prioritet(val value: kotlin.String) {
        @JsonProperty(value = "HOY") HOY("HOY"),
        @JsonProperty(value = "NORM") NORM("NORM"),
        @JsonProperty(value = "LAV") LAV("LAV");
    }

}

