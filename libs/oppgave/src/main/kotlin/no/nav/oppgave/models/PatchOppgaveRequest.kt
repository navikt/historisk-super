/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package no.nav.oppgave.models

import com.fasterxml.jackson.annotation.JsonFormat
import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param versjon Nåværende versjon på oppgaven
 * @param orgnr Organisasjonsnummer. Kan ikke nullstilles, men kan endres til personident. Merk at det kun er i helt spesielle tilfeller ident skal endres, i.e ifm journalføring. Kun én av personident eller orgnr kan angis
 * @param status Hvilken status oppgaven skal få
 * @param endretAvEnhetsnr Enhet (eller virtuell enhet, ref. norg2) saksbehandler representerer når endringen utføres. For maskinelle prosesser settes denne til 9999 eller nullstilles
 * @param tilordnetRessurs Navident for ressursen som skal tildeles oppgaven
 * @param tildeltEnhetsnr Enheten oppgaven skal tildeles
 * @param prioritet Hvilken prioritet oppgaven skal få
 * @param behandlingstema Kategorisering av oppgaven. Må være tillatt for det aktuelle temaet og i kombinasjon med en ev. behandlingstype. Se api for kodeverk
 * @param behandlingstype Kategorisering av oppgaven. Må være tillatt for det aktuelle temaet og i kombinasjon med et ev. behandlingstema. Se api for kodeverk
 * @param fristFerdigstillelse Oppgavens frist for ferdigstillelse.
 * @param aktivDato Benyttes for å legge en oppgave \"på vent\". Styrer visning i arbeidsflater, der oppgaver med dato <= dagens dato vises.
 * @param oppgavetype Mer presis kategorisering av oppgaven. Må være tillatt for det aktuelle temaet. Se api for kodeverk
 * @param tema Tema (fagområde) for oppgaven
 * @param journalpostId Angis for å knytte oppgaven til en journalpost i arkivet
 * @param saksreferanse Angis for å knytte oppgaven til en sak i et fagsystem
 * @param behandlesAvApplikasjon Angis for å indikere hvilken applikasjon oppgaven skal behandles i
 * @param kommentar 
 * @param personident ident for person oppgaven gjelder, dvs. fnr, dnr, npid eller aktørid. Kan ikke nullstilles. Kun én av personident eller orgnr kan angis. Merk at det kun er i helt spesielle tilfeller ident skal endres, i.e ifm journalføring
 */


data class PatchOppgaveRequest (

    /* Nåværende versjon på oppgaven */
    @get:JsonProperty("versjon")
    val versjon: kotlin.Int,

    /* Organisasjonsnummer. Kan ikke nullstilles, men kan endres til personident. Merk at det kun er i helt spesielle tilfeller ident skal endres, i.e ifm journalføring. Kun én av personident eller orgnr kan angis */
    @get:JsonProperty("orgnr")
    val orgnr: kotlin.String? = null,

    /* Hvilken status oppgaven skal få */
    @get:JsonProperty("status")
    val status: PatchOppgaveRequest.Status? = null,

    /* Enhet (eller virtuell enhet, ref. norg2) saksbehandler representerer når endringen utføres. For maskinelle prosesser settes denne til 9999 eller nullstilles */
    @get:JsonProperty("endretAvEnhetsnr")
    val endretAvEnhetsnr: kotlin.String? = null,

    /* Navident for ressursen som skal tildeles oppgaven */
    @get:JsonProperty("tilordnetRessurs")
    val tilordnetRessurs: kotlin.String? = null,

    /* Enheten oppgaven skal tildeles */
    @get:JsonProperty("tildeltEnhetsnr")
    val tildeltEnhetsnr: kotlin.String? = null,

    /* Hvilken prioritet oppgaven skal få */
    @get:JsonProperty("prioritet")
    val prioritet: PatchOppgaveRequest.Prioritet? = null,

    /* Kategorisering av oppgaven. Må være tillatt for det aktuelle temaet og i kombinasjon med en ev. behandlingstype. Se api for kodeverk */
    @get:JsonProperty("behandlingstema")
    val behandlingstema: kotlin.String? = null,

    /* Kategorisering av oppgaven. Må være tillatt for det aktuelle temaet og i kombinasjon med et ev. behandlingstema. Se api for kodeverk */
    @get:JsonProperty("behandlingstype")
    val behandlingstype: kotlin.String? = null,

    //TODO Fjerne eller autogenerere datoformat...
    /* Oppgavens frist for ferdigstillelse. */
    @get:JsonProperty("fristFerdigstillelse") @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    val fristFerdigstillelse: java.time.LocalDate? = null,

    /* Benyttes for å legge en oppgave \"på vent\". Styrer visning i arbeidsflater, der oppgaver med dato <= dagens dato vises. */
    @get:JsonProperty("aktivDato") @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    val aktivDato: java.time.LocalDate? = null,

    /* Mer presis kategorisering av oppgaven. Må være tillatt for det aktuelle temaet. Se api for kodeverk */
    @get:JsonProperty("oppgavetype")
    val oppgavetype: kotlin.String? = null,

    /* Tema (fagområde) for oppgaven */
    @get:JsonProperty("tema")
    val tema: kotlin.String? = null,

    /* Angis for å knytte oppgaven til en journalpost i arkivet */
    @get:JsonProperty("journalpostId")
    val journalpostId: kotlin.String? = null,

    /* Angis for å knytte oppgaven til en sak i et fagsystem */
    @get:JsonProperty("saksreferanse")
    val saksreferanse: kotlin.String? = null,

    /* Angis for å indikere hvilken applikasjon oppgaven skal behandles i */
    @get:JsonProperty("behandlesAvApplikasjon")
    val behandlesAvApplikasjon: kotlin.String? = null,

    @get:JsonProperty("kommentar")
    val kommentar: RegistrerKommentarJson? = null,

    /* ident for person oppgaven gjelder, dvs. fnr, dnr, npid eller aktørid. Kan ikke nullstilles. Kun én av personident eller orgnr kan angis. Merk at det kun er i helt spesielle tilfeller ident skal endres, i.e ifm journalføring */
    @get:JsonProperty("personident")
    val personident: kotlin.String? = null

) {

    /**
     * Hvilken status oppgaven skal få
     *
     * Values: OPPRETTET,AAPNET,UNDER_BEHANDLING,FERDIGSTILT,FEILREGISTRERT
     */
    enum class Status(val value: kotlin.String) {
        @JsonProperty(value = "OPPRETTET") OPPRETTET("OPPRETTET"),
        @JsonProperty(value = "AAPNET") AAPNET("AAPNET"),
        @JsonProperty(value = "UNDER_BEHANDLING") UNDER_BEHANDLING("UNDER_BEHANDLING"),
        @JsonProperty(value = "FERDIGSTILT") FERDIGSTILT("FERDIGSTILT"),
        @JsonProperty(value = "FEILREGISTRERT") FEILREGISTRERT("FEILREGISTRERT");
    }
    /**
     * Hvilken prioritet oppgaven skal få
     *
     * Values: HOY,NORM,LAV
     */
    enum class Prioritet(val value: kotlin.String) {
        @JsonProperty(value = "HOY") HOY("HOY"),
        @JsonProperty(value = "NORM") NORM("NORM"),
        @JsonProperty(value = "LAV") LAV("LAV");
    }

}

